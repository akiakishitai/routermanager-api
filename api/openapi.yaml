openapi: 3.0.2
info:
  version: 1.0.0
  title: Router Manager
  description: This is a managing network service.
  license:
    name: MIT
servers:
  - url: http://pine64.router.io/v1
    description: Router
paths:
  /wifi:
    get:
      summary: Status of wifi
      description: Returns status of wifi.
      operationId: wifiStatus
      responses:
        '200':
          description: status response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '404':
          $ref: '#/components/responses/NotFoundError'
        default:
          $ref: '#/components/responses/UnexpectedError'
    post:
      summary: Re-connect to wifi
      operationId: wifiReconnect
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /sys/poweroff:
    post:
      summary: System shutdown or reboot
      operationId: sys-poweroff
      requestBody:
        description: shutdown / reboot.
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/Power'
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequestError'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /sys/timedate:
    get:
      summary: The time date of this machine
      description: Returns the date of system.
      operationId: sys-timedateGet
      responses:
        '200':
          description: date of system response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Date'
        default:
          $ref: '#/components/responses/UnexpectedError'
    post:
      summary: Synchronize clock to NTP server on this machine
      operationId: sys-timedateSync
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        default:
          $ref: '#/components/responses/UnexpectedError'
components:
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          title: Erorr Code
          type: integer
          format: int32
          minimum: 100
          maximum: 600
        message:
          title: Error message
          type: string
    Status:
      type: object
      required:
        - device
        - connected
        - signal
      properties:
        device:
          type: string
          example: wlan0
        connected:
          type: boolean
        signal:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
    Power:
      type: string
      enum:
        - shutdown
        - reboot
    Date:
      type: object
      required:
        - date
      properties:
        date:
          type: string
          example: 2019/07/29 16:26:54
  responses:
    OK:
      description: OK
    NoContent:
      description: No Content
    UnexpectedError:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 500
            message: unexpected error
    BadRequestError:
      description: Bad Request error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: bad request error
    NotFoundError:
      description: Not found error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: not found error
